# Copyright (c) 2013 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
import("//tools/grit/grit_rule.gni")

import("//ui/webui/resources/tools/generate_grd.gni")
import("//tools/grit/repack.gni")

action("layout_resources_id") {
  script = "res_generate.py"
  inputs = [
    "res/1.xml",
  ]

  outputs = [ 
    "$target_gen_dir/layout_id.h",
  ]
  
  target = "layout"
  
  response_file_contents = rebase_path(inputs, root_build_dir)
  
  args = [
    "--file-list={{response_file_name}}",
    "--target",
    target,  
    "--output-dir",
    rebase_path(target_gen_dir, root_build_dir),  
  ]
}

generate_grd("layout_generate_grd") {
  grd_prefix = "layout"
  out_grd = "$target_gen_dir/${grd_prefix}_resources.grd"
  deps = [ ":layout_resources_id" ]
  
  input_files_base_dir = rebase_path(target_gen_dir, root_build_dir)
  input_files = [
    "1.xml",
  ]
}


grit("layout_resources_grd") {
  testonly = true
  source = "$target_gen_dir/layout_resources.grd"
  outputs = [
    "grit/layout_resources.h",
    "grit/layout_resources_map.h",
    "grit/layout_resources_map.cc",
    "layout_resources.pak",
  ]
  
  deps = [ ":layout_generate_grd" ]
}

copy("layout_resources_pak") {
  testonly = true
  sources = [ "$target_gen_dir/layout_resources.pak" ]
  outputs = [ "$root_out_dir/layout_resources.pak" ]
  public_deps = [ ":layout_resources_grd" ]
}


static_library("layout") {
  testonly = true
  sources = [
    "layout_attribute.h",
    "layout_attribute.cc",
    "layout_params.h",
    "layout_params.cc",
    "layout_types.h",
    "layout_types.cc",
    "layout_deflate.h",
    "layout_deflate.cc",
    "layout_master.h",
    "layout_master.cc",
    "property_manager.h",
    "property_manager.cc",
    "relative_layout.h",
    "relative_layout.cc",
    "linear_layout.h",
    "linear_layout.cc",
  ]
  
  deps = [
    "//base",
    "//ui/views",
    "//third_party/expat",
    ":layout_resources_pak",
  ]
  
  include_dirs = [
    "$target_gen_dir",
  ]
  
  cflags_cc = [
    "/std:c++17",
  ]
  
  defines = [
    "_LIBCPP_NO_EXCEPTIONS",
  ]
}
